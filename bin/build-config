#!/usr/bin/env node

var _fs   = require('fs'),
    _path = require('path');

var ROOT      = _path.dirname(_path.dirname(__filename) + "../");
var OUT_PHP   = "src/server-php/settings.php";
var OUT_NODE  = "src/server-node/settings.json";
var OUT_JS    = "dist/settings.js";
var REPO_FILE = "src/packages/repositories.json";
var MIME_FILE = "src/mime.json";

var buildData = JSON.parse(_fs.readFileSync("src/build.json"));
var mimeData = JSON.parse(_fs.readFileSync(MIME_FILE)).descriptions;

if ( buildData !== null ) {
  var settings = buildData.settings.backend;
  var handler  = buildData.handler || "demo";
  for ( var i in settings ) {
    if ( settings.hasOwnProperty(i) ) {
      if ( typeof settings[i] === "string" ) {
        settings[i] = settings[i].replace("%ROOT%", ROOT);
        settings[i] = settings[i].replace("%HANDLER%", handler);
      }
    }
  }

  var cfg_node = settings;
  var cfg_php  = [];
  var cfg_js   = "(function() {\n  window.OSjs = window.OSjs   || {};\n  OSjs.Settings = OSjs.Settings || {};\n  OSjs.Settings.DefaultConfig = function() {\n    return %CONFIG%;\n  };\n})();\n";

  for ( var i in settings ) {
    if ( settings.hasOwnProperty(i) ) {
      cfg_php.push("define('" + i.toUpperCase() + "', '" + settings[i] + "');");
    }
  }

  cfg_php = "<?php\n" + cfg_php.join("\n") + "\n?>";
  _fs.writeFileSync(OUT_NODE, JSON.stringify(cfg_node));
  _fs.writeFileSync(OUT_PHP, cfg_php);

  settings = buildData.settings.frontend;
  settings.MIME = mimeData;
  settings.Core.Repositories = JSON.parse(_fs.readFileSync(REPO_FILE));
  _fs.writeFileSync(OUT_JS, cfg_js.replace("%CONFIG%", JSON.stringify(settings, null, 2)));
}

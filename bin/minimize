#!/usr/bin/env php
<?php
header("Content-type: text/plain; charset=utf-8");

$header = <<<EOPHP

/*!
 * OS.js - JavaScript Operating System
 *
 * Copyright (c) 2011-2013, Anders Evenrud <andersevenrud@gmail.com>
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met: 
 * 
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer. 
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution. 
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * @author  Anders Evenrud <andersevenrud@gmail.com>
 * @licence Simplified BSD License
 */

EOPHP;

$dryrun = sizeof($argv) > 1 && $argv[1] === '--dry';
$dirs = Array('frontend');

foreach ( $dirs as $fdir ) {
  print sprintf("In '%s':\n", $fdir);
  foreach ( scandir($fdir) as $i ) {
    if ( substr($i, 0, 1) === "." ) continue;
    if ( $i == 'settings.js' ) continue;

    $isCss = preg_match("/\.css$/i", $i) !== 0;
    $fname = "{$fdir}/{$i}";

    if ( $file = file_get_contents($fname) ) {
      $minimized = preg_replace('/(?:(?:\/\*(?:[^*]|(?:\*+[^*\/]))*\*+\/)|(?:(?<!\:|\\\)\/\/.*))/', "", $file);
      if ( $isCss ) {
        $minimized = preg_replace("/^\@charset(.*)/", "", $minimized);
      } else {
        $minimized = preg_replace("/console\.(log|info|warn|debug|group|groupEnd)\((.*)\);/", "", $minimized);
      }
      //$minimized = preg_replace("/\n+|\s+|\t+/", "", $minimized);

      if ( $isCss ) {
        $data = "@charset \"UTF-8\";\n{$header}{$minimized}";
      } else {
        $data = "{$header}{$minimized}";
      }

      if ( !$dryrun && file_put_contents($fname, $data) === false ) {
        print "Failed to write minimized file '{$i}'";
        continue;
      }

      $before = strlen($file);
      $after  = strlen($data);
      $diff   = -($before - $after);

      print sprintf("  Minimized '%s' from %d to %d (%d)\n", $i, $before, $after, $diff);
    }
  }
}

?>
